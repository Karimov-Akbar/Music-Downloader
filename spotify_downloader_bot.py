import os
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
from spotdl.download import Downloader
from spotdl.utils.search import parse_query

# üîë –¢–æ–∫–µ–Ω –±–µ—Ä–µ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

DOWNLOAD_DIR = "downloads"
os.makedirs(DOWNLOAD_DIR, exist_ok=True)


def start(update, context):
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç üëã –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫ Spotify!")


def download_track(url: str) -> str:
    """–°–∫–∞—á–∏–≤–∞–µ—Ç —Ç—Ä–µ–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É"""
    downloader = Downloader()
    search_results = parse_query(url)

    if not search_results:
        return None

    song = search_results[0]
    file_path = downloader.download(song, DOWNLOAD_DIR)
    return file_path


def handle_message(update, context):
    url = update.message.text.strip()

    if "spotify.com" not in url:
        update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫ Spotify üé∂")
        return

    update.message.reply_text("‚è≥ –°–∫–∞—á–∏–≤–∞—é...")

    try:
        file_path = download_track(url)
        if file_path and os.path.exists(file_path):
            with open(file_path, "rb") as f:
                update.message.reply_audio(f)
            os.remove(file_path)
        else:
            update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏.")
    except Exception as e:
        update.message.reply_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")


def main():
    if not TELEGRAM_TOKEN:
        print("‚ùå –£–∫–∞–∂–∏ TELEGRAM_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return

    updater = Updater(TELEGRAM_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))

    port = int(os.getenv("PORT", 8443))
    updater.start_polling()
    updater.idle()


if __name__ == "__main__":
    main()
