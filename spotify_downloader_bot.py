import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import FSInputFile
from spotdl import Spotdl

logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
)

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏ –∫–ª—é—á–∏ –∏–∑ Railway –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
SPOTIFY_CLIENT_ID = os.getenv("SPOTIFY_CLIENT_ID")
SPOTIFY_CLIENT_SECRET = os.getenv("SPOTIFY_CLIENT_SECRET")

if not TELEGRAM_TOKEN or not SPOTIFY_CLIENT_ID or not SPOTIFY_CLIENT_SECRET:
    raise ValueError("–ù–µ –∑–∞–¥–∞–Ω—ã TELEGRAM_TOKEN, SPOTIFY_CLIENT_ID –∏–ª–∏ SPOTIFY_CLIENT_SECRET!")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º SpotDL –∫–ª–∏–µ–Ω—Ç
spotdl_client = Spotdl(
    client_id=SPOTIFY_CLIENT_ID,
    client_secret=SPOTIFY_CLIENT_SECRET,
)

# –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()

# /start
@dp.message(Command("start"))
async def start_handler(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! üéµ –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ Spotify —Ç—Ä–µ–∫, –∏ —è —Å–∫–∞—á–∞—é –µ–≥–æ –¥–ª—è —Ç–µ–±—è.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–æ–∫
@dp.message()
async def download_handler(message: types.Message):
    url = message.text.strip()

    if not url.startswith("https://open.spotify.com/track/"):
        await message.answer("‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫ Spotify.")
        return

    try:
        await message.answer("‚è≥ –°–∫–∞—á–∏–≤–∞—é —Ç—Ä–µ–∫, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ...")

        # –°–∫–∞—á–∏–≤–∞–µ–º —Ç—Ä–µ–∫
        results = spotdl_client.search([url])
        song = results[0]
        file_path = spotdl_client.download(song)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        audio_file = FSInputFile(file_path)
        await message.answer_audio(audio_file)

        # –£–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏, —á—Ç–æ–±—ã –Ω–µ –∑–∞–±–∏–≤–∞—Ç—å Railway
        os.remove(file_path)

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ {url}: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç—Ä–µ–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
